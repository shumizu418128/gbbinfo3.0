name: Run Tests

on:
  # push:
  #   branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies with uv
      run: |
        uv pip install --system -r requirements.txt
        uv pip install --system pytest pytest-cov

    - name: Set up environment variables
      env:
        # GitHub Secretsから機密情報を取得
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
        GOOGLE_SHEET_CREDENTIALS: ${{ secrets.GOOGLE_SHEET_CREDENTIALS }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        # テスト用の環境変数
        FLASK_ENV: testing
        TESTING: true
        IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
      run: |
        echo "Environment variables set for testing"

    - name: Run tests with pytest
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
        GOOGLE_SHEET_CREDENTIALS: ${{ secrets.GOOGLE_SHEET_CREDENTIALS }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        FLASK_ENV: testing
        TESTING: true
        IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
      run: |
        python -m pytest app/tests/tests.py -v --tb=short

    - name: Run tests with unittest (fallback)
      if: failure()
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
        GOOGLE_SHEET_CREDENTIALS: ${{ secrets.GOOGLE_SHEET_CREDENTIALS }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        FLASK_ENV: testing
        TESTING: true
        IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
      run: |
        python -m unittest app.tests.tests -v
